{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ashraf/code/ashrafuthman/condenast-challenge/components/Post.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Hidden, Typography, makeStyles } from '@material-ui/core';\nimport parser from 'react-html-parser';\nimport useImage from '../hooks/useImage';\nimport ArticleLink from './ArticleLink';\nimport moment from 'moment';\nvar styles = makeStyles(function (theme) {\n  var _title;\n\n  return {\n    img: _defineProperty({\n      height: 200,\n      width: 200\n    }, theme.breakpoints.down('sm'), {\n      height: 100,\n      width: 100\n    }),\n    title: (_title = {}, _defineProperty(_title, theme.breakpoints.down('sm'), {\n      fontSize: 18\n    }), _defineProperty(_title, '&:hover', {\n      textDecoration: 'underline'\n    }), _title),\n    excerpt: {\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    }\n  };\n});\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n  var classes = styles();\n  var title = parser(post.title.rendered);\n  var excerpt = parser(post.excerpt.rendered.replace(/<(.|\\n)*?>/g, ''));\n  var imageUrl = useImage(post.featured_media);\n  var postDate = moment(new Date(post.date)).format('L');\n  return __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    justify: \"space-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    md: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(ArticleLink, {\n    slug: post.slug,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, title), __jsx(Typography, {\n    variant: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \" \", postDate, \" \"))), __jsx(Hidden, {\n    smDown: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(ArticleLink, {\n    slug: post.slug,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    component: \"h2\",\n    color: \"textSecondary\",\n    className: classes.excerpt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, excerpt)))), __jsx(Grid, {\n    item: true,\n    xs: \"auto\",\n    md: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(ArticleLink, {\n    slug: post.slug,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    width: \"200\",\n    height: \"200\",\n    src: imageUrl,\n    loading: \"lazy\",\n    className: classes.img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/condenast-challenge/components/Post.js"],"names":["React","PropTypes","Grid","Hidden","Typography","makeStyles","parser","useImage","ArticleLink","moment","styles","theme","img","height","width","breakpoints","down","title","fontSize","textDecoration","excerpt","Post","post","classes","rendered","replace","imageUrl","featured_media","postDate","Date","date","format","slug","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Hidden, Typography, makeStyles } from '@material-ui/core'\nimport parser from 'react-html-parser'\nimport useImage from '../hooks/useImage'\nimport ArticleLink from './ArticleLink'\nimport moment from 'moment'\n\nconst styles = makeStyles((theme) => ({\n  img: {\n    height: 200,\n    width: 200,\n    [theme.breakpoints.down('sm')]: {\n      height: 100,\n      width: 100\n    }\n  },\n\n  title: {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 18\n    },\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  excerpt: {\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }\n\n}))\n\nconst Post = ({ post }) => {\n  const classes = styles()\n  const title = parser(post.title.rendered)\n  const excerpt = parser(post.excerpt.rendered.replace(/<(.|\\n)*?>/g, ''))\n  const imageUrl = useImage(post.featured_media)\n  const postDate = moment(new Date(post.date)).format('L')\n\n  return (\n    <Grid container spacing={4} justify='space-between'>\n      <Grid item xs={8} md={4}>\n        <ArticleLink slug={post.slug}>\n          <Typography variant='h5' component='h1' className={classes.title}>\n            {title}\n          </Typography>\n          <Typography variant='caption'> {postDate} </Typography>\n        </ArticleLink>\n      </Grid>\n\n      <Hidden smDown>\n        <Grid item md={6}>\n          <ArticleLink slug={post.slug}>\n            <Typography variant='subtitle1' component='h2' color='textSecondary' className={classes.excerpt}>\n              {excerpt}\n            </Typography>\n          </ArticleLink>\n        </Grid>\n      </Hidden>\n\n      <Grid item xs='auto' md={2}>\n        <ArticleLink slug={post.slug}>\n          <img width='200' height='200' src={imageUrl} loading='lazy' className={classes.img}/>\n        </ArticleLink>\n      </Grid>\n    </Grid>\n\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}