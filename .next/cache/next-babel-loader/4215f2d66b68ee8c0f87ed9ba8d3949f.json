{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport fetch from 'isomorphic-unfetch';\nexport var SITE_NAME = 'techcrunch.com';\nexport var BASE_URL = \"https://\".concat(SITE_NAME, \"/wp-json/wp/v2\");\nexport var POSTS_LIMIT = 4;\nexport var searchPosts = function searchPosts(keyword) {\n  var page,\n      res,\n      data,\n      _args = arguments;\n  return _regeneratorRuntime.async(function searchPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          page = _args.length > 1 && _args[1] !== undefined ? _args[1] : 1;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/posts?search=\").concat(keyword, \"&page=\").concat(page)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", console.error(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 11]], Promise);\n};\nexport var fetchPosts = function fetchPosts() {\n  var limit,\n      page,\n      res,\n      data,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function fetchPosts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          limit = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : POSTS_LIMIT;\n          page = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 1;\n          console.log('fetching posts...');\n          _context2.prev = 3;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/posts?per_page=\").concat(limit, \"&page=\").concat(page)));\n\n        case 6:\n          res = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", data);\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](3);\n          return _context2.abrupt(\"return\", console.error(_context2.t0));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[3, 13]], Promise);\n};\nexport var fetchCategories = function fetchCategories() {\n  var res, data;\n  return _regeneratorRuntime.async(function fetchCategories$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/categories\")));\n\n        case 3:\n          res = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", data);\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", console.error('failed to fetch categories:', _context3.t0));\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var fetchCategoryBySlug = function fetchCategoryBySlug(slug) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetchCategoryBySlug$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/categories?slug=\").concat(slug)));\n\n        case 2:\n          res = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context4.sent;\n          return _context4.abrupt(\"return\", data[0]);\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fetchCategoryTitle = function fetchCategoryTitle(id) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetchCategoryTitle$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/posts?categories=\").concat(id)));\n\n        case 3:\n          res = _context5.sent;\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context5.sent;\n          return _context5.abrupt(\"return\", data.title.rendered);\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          return _context5.abrupt(\"return\", console.error(_context5.t0));\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var fetchCategoryPosts = function fetchCategoryPosts(categoryId) {\n  var limit,\n      page,\n      res,\n      data,\n      _args6 = arguments;\n  return _regeneratorRuntime.async(function fetchCategoryPosts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          limit = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : POSTS_LIMIT;\n          page = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : 1;\n          _context6.prev = 2;\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/posts?categories=\").concat(categoryId, \"&per_page=\").concat(limit, \"&page=\").concat(page)));\n\n        case 5:\n          res = _context6.sent;\n          _context6.next = 8;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 8:\n          data = _context6.sent;\n          return _context6.abrupt(\"return\", data);\n\n        case 12:\n          _context6.prev = 12;\n          _context6.t0 = _context6[\"catch\"](2);\n          return _context6.abrupt(\"return\", console.error(_context6.t0));\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n};\nexport var fetchAllCategories = function fetchAllCategories() {\n  var categories;\n  return _regeneratorRuntime.async(function fetchAllCategories$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(fetchCategories());\n\n        case 2:\n          categories = _context8.sent;\n          return _context8.abrupt(\"return\", Promise.all(categories.map(function _callee(category) {\n            return _regeneratorRuntime.async(function _callee$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.t0 = category;\n                    _context7.next = 3;\n                    return _regeneratorRuntime.awrap(fetchCategoryPosts(category.id));\n\n                  case 3:\n                    _context7.t1 = _context7.sent;\n                    return _context7.abrupt(\"return\", {\n                      info: _context7.t0,\n                      posts: _context7.t1\n                    });\n\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 4:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fetchArticle = function fetchArticle(slug) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetchArticle$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/posts?slug=\").concat(slug)));\n\n        case 3:\n          res = _context9.sent;\n          _context9.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context9.sent;\n          return _context9.abrupt(\"return\", data[0]);\n\n        case 10:\n          _context9.prev = 10;\n          _context9.t0 = _context9[\"catch\"](0);\n          return _context9.abrupt(\"return\", console.error('fetch article error:', _context9.t0));\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var fetchImage = function fetchImage(img, SIZE) {\n  var imageSize, res, data, sizes_2;\n  return _regeneratorRuntime.async(function fetchImage$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          imageSize = function imageSize(sizes) {\n            if (sizes.medium) {\n              return sizes.medium.source_url;\n            } else if (sizes.large) {\n              return sizes.large.source_url;\n            } else {\n              return sizes.full.source_url;\n            }\n          };\n\n          _context10.prev = 1;\n          _context10.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(BASE_URL, \"/media/\").concat(img)));\n\n        case 4:\n          res = _context10.sent;\n          _context10.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context10.sent;\n          sizes_2 = data.media_details.sizes;\n\n          if (SIZE) {\n            _context10.next = 13;\n            break;\n          }\n\n          return _context10.abrupt(\"return\", imageSize(sizes_2));\n\n        case 13:\n          _context10.t0 = SIZE;\n          _context10.next = _context10.t0 === 'medium' ? 16 : _context10.t0 === 'large' ? 18 : _context10.t0 === 'full' ? 20 : 22;\n          break;\n\n        case 16:\n          console.log('medium');\n          return _context10.abrupt(\"return\", sizes_2.medium ? sizes_2.medium.source_url : imageSize(sizes_2));\n\n        case 18:\n          console.log('large');\n          return _context10.abrupt(\"return\", sizes_2.large ? sizes_2.large.source_url : imageSize(sizes_2));\n\n        case 20:\n          console.log('full');\n          return _context10.abrupt(\"return\", sizes_2.full ? sizes_2.full.source_url : imageSize(sizes_2));\n\n        case 22:\n          _context10.next = 27;\n          break;\n\n        case 24:\n          _context10.prev = 24;\n          _context10.t1 = _context10[\"catch\"](1);\n          return _context10.abrupt(\"return\", console.error('unable to fetch img:', img, _context10.t1));\n\n        case 27:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[1, 24]], Promise);\n};","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/condenast-challenge/lib/api.js"],"names":["fetch","SITE_NAME","BASE_URL","POSTS_LIMIT","searchPosts","keyword","page","res","json","data","console","error","fetchPosts","limit","log","fetchCategories","fetchCategoryBySlug","slug","fetchCategoryTitle","id","title","rendered","fetchCategoryPosts","categoryId","fetchAllCategories","categories","Promise","all","map","category","info","posts","fetchArticle","fetchImage","img","SIZE","imageSize","sizes","medium","source_url","large","full","sizes_2","media_details"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\nexport const SITE_NAME = 'techcrunch.com'\nexport const BASE_URL = `https://${SITE_NAME}/wp-json/wp/v2`\nexport const POSTS_LIMIT = 4\n\nexport const searchPosts = async (keyword, page = 1) => {\n  try {\n    const res = await fetch(`${BASE_URL}/posts?search=${keyword}&page=${page}`)\n    const data = await res.json()\n    return data\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const fetchPosts = async (limit = POSTS_LIMIT, page = 1) => {\n  console.log('fetching posts...')\n  try {\n    const res = await fetch(`${BASE_URL}/posts?per_page=${limit}&page=${page}`)\n    const data = await res.json()\n    return data\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const fetchCategories = async () => {\n  try {\n    const res = await fetch(`${BASE_URL}/categories`)\n    const data = await res.json()\n    return data\n  } catch (err) {\n    return console.error('failed to fetch categories:', err)\n  }\n}\n\nexport const fetchCategoryBySlug = async slug => {\n  const res = await fetch(`${BASE_URL}/categories?slug=${slug}`)\n  const data = await res.json()\n  return data[0]\n}\n\nexport const fetchCategoryTitle = async id => {\n  try {\n    const res = await fetch(`${BASE_URL}/posts?categories=${id}`)\n    const data = await res.json()\n    return data.title.rendered\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const fetchCategoryPosts = async (categoryId, limit = POSTS_LIMIT, page = 1) => {\n  try {\n    const res = await fetch(`${BASE_URL}/posts?categories=${categoryId}&per_page=${limit}&page=${page}`)\n    const data = await res.json()\n    return data\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const fetchAllCategories = async () => {\n  const categories = await fetchCategories()\n\n  return Promise.all(categories.map(async category => {\n    return {\n      info: category,\n      posts: await fetchCategoryPosts(category.id)\n    }\n  }))\n}\n\nexport const fetchArticle = async (slug) => {\n  try {\n    const res = await fetch(`${BASE_URL}/posts?slug=${slug}`)\n    const data = await res.json()\n    return data[0]\n  } catch (err) {\n    return console.error('fetch article error:', err)\n  }\n}\n\nexport const fetchImage = async (img, SIZE) => {\n  const imageSize = (sizes) => {\n    if (sizes.medium) {\n      return sizes.medium.source_url\n    } else if (sizes.large) {\n      return sizes.large.source_url\n    } else {\n      return sizes.full.source_url\n    }\n  }\n\n  try {\n    const res = await fetch(`${BASE_URL}/media/${img}`)\n    const data = await res.json()\n    const sizes_2 = data.media_details.sizes\n\n    if (!SIZE) {\n      return imageSize(sizes_2)\n    } else {\n      switch (SIZE) {\n        case 'medium':\n          console.log('medium')\n          return sizes_2.medium ? sizes_2.medium.source_url : imageSize(sizes_2)\n        case 'large':\n          console.log('large')\n          return sizes_2.large ? sizes_2.large.source_url : imageSize(sizes_2)\n        case 'full':\n          console.log('full')\n          return sizes_2.full ? sizes_2.full.source_url : imageSize(sizes_2)\n      }\n    }\n  } catch (err) {\n    return console.error('unable to fetch img:', img, err)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}